@model tiendat.Models.Product

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Themsp</title>
</head>
<body>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    
    
    @using (Html.BeginForm("Themsp", "QLSanPham", null, FormMethod.Post, new { enctype = "multipart/form-data", id = "formCreate" })) 
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal">
            <h4>Product</h4>
            <hr />
            @Html.ValidationSummary(true)
    
            <div class="form-group">
                @Html.LabelFor(model => model.Photo, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" name="Photo" />
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.IsNew, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.IsNew)
                    @Html.ValidationMessageFor(model => model.IsNew)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Status, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Status)
                    @Html.ValidationMessageFor(model => model.Status)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Price, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price)
                    @Html.ValidationMessageFor(model => model.Price)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.PriceSell, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PriceSell)
                    @Html.ValidationMessageFor(model => model.PriceSell)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.DateFrom, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="date" name="DateFrom" />
                    @Html.ValidationMessageFor(model => model.DateFrom)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.DateTo, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="date" name="DateTo" />
                    @Html.ValidationMessageFor(model => model.DateTo)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.IsLock, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.IsLock)
                    @Html.ValidationMessageFor(model => model.IsLock)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.CategoryID, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CategoryID)
                    @Html.ValidationMessageFor(model => model.CategoryID)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.BrandID, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("danhmuc")
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.DateCreated, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="date" name="DateCreated" />
                    @Html.ValidationMessageFor(model => model.DateCreated)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.DateModified, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="date" name="DateModified" />
                    @Html.ValidationMessageFor(model => model.DateModified)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.ModifiedBy, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ModifiedBy)
                    @Html.ValidationMessageFor(model => model.ModifiedBy)
                </div>
            </div>
    
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>
